library(palmerpenguins)
library(dplyr)
library(ggplot2)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
library(dplyr)
install.packages("dplyr")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
library(palmerpenguins)
library(dplyr)
library(ggplot2)
df <- palmerpenguins::penguins
df %>%
group_by(species, sex) %>%
summarise(
across(
where(is.numeric),
\(x) mean(x, na.rm = TRUE)
)
) %>%
knitr::kable()
df %>%
ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +
geom_point() +
geom_smooth(method = "lm")
reticulate::repl_python()
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
quit
library(reticulate)
virtualenv_create("python")
py_install("palmerpenquins")
library(reticulate)
virtualenv_create("python")
py_install("palmerpenguins")
library(reticulate)
virtualenv_create("python")
target_dir <- "C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project"
py_install(packages = c("palmerpenguins","pandas","sklearn.linear_model","sklearn"), pip = "--target = target_dir")
reticulate::repl_python()
python -m venv <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
python -m venv <.venv>
python -m venv <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
source <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
/bin/activate
python -m venv <C:\Users\C25Christina.Marquez\OneDrive - afacademy.af.edu\Documents\School\Spring 2024\Math 378\Final Project>
source <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
/bin/activate
venv <C:\Users\C25Christina.Marquez\OneDrive - afacademy.af.edu\Documents\School\Spring 2024\Math 378\Final Project>
reticulate::repl_python()
python -m venv <C:\Users\C25Christina.Marquez\OneDrive - afacademy.af.edu\Documents\School\Spring 2024\Math 378\Final Project>
#source <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
#/bin/activate
python -m venv <C:\Users\C25Christina.Marquez\OneDrive - afacademy.af.edu\Documents\School\Spring 2024\Math 378\Final Project>
source <C:/Users/C25Christina.Marquez/OneDrive - afacademy.af.edu/Documents/School/Spring 2024/Math 378/Final Project>
/bin/activate
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
reticulate::repl_python()
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
from vetiver import VetiverModel
help(vetiver.VetiverModel)
#v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
help(vetiver.VetiverModel)
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
from palmerpenguins import penguins
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
df = penguins.load_penguins().dropna()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
b = bins.board_folder('data\model',allow_pickle_read = True)
v = VetiverModel.from_pin(b,'penguin_model')
app = VetiverAPI(v, check_prototype=True)
b = pins.board_folder('data\model',allow_pickle_read = True)
v = VetiverModel.from_pin(b,'penguin_model')
app = VetiverAPI(v, check_prototype=True)
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
#b = pins.board_folder('data\model',allow_pickle_read = True)
#v = VetiverModel.from_pin(b,'penguin_model')
#app = VetiverAPI(v, check_prototype=True)
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
pins.pin(model, name = "penguin_model')
pins.get(name = "penguin_model)
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
pins.pin(model, name = "penguin_model')
pins.get(name = "penguin_model")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
pins.pin(model, name = 'penguin_model')
pins.get(name = "penguin_model")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
pins.pin(v, name = 'vetiver_pin')
pins.get(name = 'vetiver_pin')
git init
reticulate::repl_python()
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
import duckdb
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
from pins import board_folder
from vetiver import vetiver_pin_write
model_board = board_folder("/data/model", allow_pickle_read = True)
vetiver_pin_write(model_board, v)
from vetiver import VetiverAPI
app = VetiverAPI(v, check_prototype = True)
quit
library(dplyr)
library(ggplot2)
library(dbplyr)
con <- DBI::dbConnect(
duckdb::duckdb(),
dbdir = "my-db.duckdb"
)
df <- dplyr::tbl(con, "penguins")
df %>%
group_by(species, sex) %>%
summarise(
across(
ends_with("mm") | ends_with("g"),
\(x) mean(x, na.rm = TRUE)
)
) %>%
dplyr::collect() %>%
knitr::kable()
df %>%
ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +
geom_point() +
geom_smooth(method = "lm")
DBI::dbDisconnect(con)
reticulate::repl_python()
import duckdb
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
source .venv bin/activate
source .venv/bin/activate
source renv/bin/activate
python -m venv .venv
renv::status()
?renv::status()
renv::init()
library(palmerpenguins)
library(dplyr)
library(ggplot2)
df <- palmerpenguins::penguins
df %>%
group_by(species, sex) %>%
summarise(
across(
where(is.numeric),
\(x) mean(x, na.rm = TRUE)
)
) %>%
knitr::kable()
df %>%
ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +
geom_point() +
geom_smooth(method = "lm")
reticulate::repl_python()
from pandas import get_dummies
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
import duckdb
con = duckdb.connect('my-db.duckdb')
df = con.execute("SELECT * FROM penguins").fetchdf().dropna()
con.close()
df.head(3)
X = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)
y = df['body_mass_g']
model = LinearRegression().fit(X, y)
print(f"R^2 {model.score(X,y)}")
print(f"Intercept {model.intercept_}")
print(f"Columns {X.columns}")
print(f"Coefficients {model.coef_}")
from vetiver import VetiverModel
v = VetiverModel(model, model_name='penguin_model', prototype_data=X)
from pins import board_folder
from vetiver import vetiver_pin_write
model_board = board_folder("/data/model", allow_pickle_read = True)
vetiver_pin_write(model_board, v)
from vetiver import VetiverAPI
app = VetiverAPI(v, check_prototype = True)
http://127.0.0.1:8080/predict
app_ui = ui.page_fluid(
